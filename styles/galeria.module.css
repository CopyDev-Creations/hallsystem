.section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    width: 100%;
    min-height: 90lvh;
    height: 100%;
    margin-top: 10lvh;

    & h1 {
        color: var(--primary-color);
        font-size: min(8vw, max(54px, 4vw));
        line-height: min(8vw, max(64px, 5vw));
        /* text-transform: uppercase; */
        z-index: 1;
    }
}

.gallery {
    display: grid;
    width: 100%;
    grid-auto-rows: 300px;
    gap: 20px;
    padding: 20px;
    /* mask-image: linear-gradient(white 50%, transparent); */

    &>* {
        clip-path: polygon(0% 20px, 20px 0%, calc(100% - 20px) 0%, 100% 20px, 100% calc(100% - 20px), calc(100% - 20px) 100%, 20px 100%, 0% calc(100% - 20px));
    }

    /* &>*:nth-child(6n + 1) {
        clip-path: polygon(0% 160px, 160px 0%, 100% 0%, 100% calc(100% - 160px), calc(100% - 160px) 100%, 0% 100%);
    }

    &>*:nth-child(6n + 2) {
        clip-path: polygon(0% 80px, 80px 0%, 100% 0%, 100% calc(100% - 80px), calc(100% - 80px) 100%, 0% 100%);
    }

    &>*:nth-child(6n + 3) {
        clip-path: polygon(0% 0%, calc(100% - 80px) 0%, 100% 80px, 100% 100%, 80px 100%, 0% calc(100% - 80px));
    }

    &>*:nth-child(6n + 4) {
        clip-path: polygon(0% 120px, 120px 0%, 100% 0%, 100% 100%, 0% 100%);
    } */
}

@media (min-width: 1000px) {
    .gallery {
        grid-template-columns: repeat(4, 1fr);

        &>*:nth-child(3n + 1) {
            grid-column: span 2;
            grid-row: span 2;
        }
    }
}

@media (max-width: 999px) {
    .gallery {
        grid-template-columns: repeat(3, 1fr);

        &>*:nth-child(6n + 1),
        &>*:nth-child(6n + 5) {
            grid-column: span 2;
            grid-row: span 2;
        }

        &>*:last-child {
            grid-column: span 3;
        }
    }
}

@media (max-width: 500px) {
    .gallery {
        grid-template-columns: repeat(2, 1fr);

        &>*:nth-child(6n + 1),
        &>*:nth-child(6n + 5) {
            grid-column: auto;
            grid-row: auto;
        }

        &>*:nth-child(3n + 1) {
            grid-column: span 2;
            grid-row: span 2;
        }

    }
}